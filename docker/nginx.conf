worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /usr/local/nginx/conf/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # HLS specific settings
    vod_mode mapped;
    vod_metadata_cache metadata_cache 16m;
    vod_response_cache response_cache 512m;
    vod_segment_duration 4000;  # 4 seconds per segment
    vod_align_segments_to_key_frames on;
    vod_dash_fragment_file_name_prefix "segment";
    vod_hls_segment_file_name_prefix "segment";

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

    server {
        listen 8080;
        server_name localhost;
        
        # Cache settings
        proxy_cache_path /var/cache/nginx/data levels=1:2 keys_zone=nginx_cache:10m max_size=1g inactive=60m;
        proxy_temp_path /var/cache/nginx/temp;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;

        # VOD HLS streaming location - Local mode (direct file access)
        location /hls/local/ {
            alias /app/recordings/;
            vod hls;
            
            # HLS optimization
            vod_hls_absolute_master_urls off;
            vod_hls_absolute_index_urls off;
            vod_hls_segment_container_format mpegts;
            vod_hls_mpegts_align_frames on;
            vod_hls_mpegts_interleave_frames on;
            
            # Error handling
            vod_hls_absolute_iframe_urls off;
            vod_max_mapping_response_size 512k;
            vod_mapping_cache mapping_cache 64m;
        }
        
        # VOD HLS streaming location - Mapped mode (gets mapping from Rust server)
        location ~ ^/hls/mapped/(.*)$ {
            vod hls;
            vod_mode mapped;
            vod_upstream_location /mapping/;
            vod_upstream_extra_args "recording_id=$1";
            
            # HLS optimization
            vod_hls_absolute_master_urls off;
            vod_hls_absolute_index_urls off;
            vod_hls_segment_container_format mpegts;
            vod_hls_mpegts_align_frames on;
            vod_hls_mpegts_interleave_frames on;
            
            # Error handling
            vod_hls_absolute_iframe_urls off;
            vod_max_mapping_response_size 512k;
            vod_mapping_cache mapping_cache 64m;
        }
        
        # VOD HLS Camera View (multiple recordings from single camera)
        location ~ ^/hls/camera/(.*)$ {
            vod hls;
            vod_mode mapped;
            vod_upstream_location /mapping/;
            vod_upstream_extra_args "camera_id=$1";
            
            # HLS optimization
            vod_hls_absolute_master_urls off;
            vod_hls_absolute_index_urls off;
            vod_hls_segment_container_format mpegts;
            vod_hls_mpegts_align_frames on;
            vod_hls_mpegts_interleave_frames on;
            
            # Error handling
            vod_hls_absolute_iframe_urls off;
            vod_max_mapping_response_size 512k;
            vod_mapping_cache mapping_cache 64m;
        }
        
        # Mapping request proxy to Rust server
        location /mapping/ {
            internal;
            proxy_pass http://localhost:4750/api/vod/mapping?$args;
            proxy_set_header Host $http_host;
        }

        # Direct MP4 file access
        location /recordings/ {
            alias /app/recordings/;
            
            # File handling optimization
            aio on;
            directio 512;
            output_buffers 2 1m;
            
            # Set the content type for MP4 files
            types {
                video/mp4 mp4;
            }
            
            # Enable directory listing
            autoindex on;
            autoindex_format json;
            
            # CORS headers for video playback
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Range,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            
            # Add caching headers for better performance
            expires 7d;
            add_header Cache-Control "public";
        }
        
        # Proxy all other requests to the Rust server
        location / {
            proxy_pass http://localhost:4750;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
            proxy_cache nginx_cache;
        }
    }
}