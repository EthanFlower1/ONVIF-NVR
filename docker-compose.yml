version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-g_streamer}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  g-streamer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-g_streamer}
      RUST_SERVER_PORT: ${RUST_SERVER_PORT:-4750}
      NGINX_PORT: ${NGINX_PORT:-8080}
      RECORDINGS_PATH: /app/recordings
    ports:
      - "${NGINX_PORT:-8080}:8080"
      - "${RUST_SERVER_PORT:-4750}:4750"
    volumes:
      - ./recordings:/app/recordings:ro
      - ./public:/app/public
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    restart: always

volumes:
  pg_data:
  nginx_cache:
  nginx_logs: